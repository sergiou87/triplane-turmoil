name: Build Triplane Turmoil Release
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      prerelease:
        required: true
        default: false
        type: boolean
      release_notes:
        required: false
        type: string

jobs:
  build-fokker-lst:
    name: Build fokker.dks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          make depend
          make tools/dksbuild
          make fokker.dks
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fokker.dks
          path: fokker.dks
  build-switch:
    name: Nintendo Switch
    needs: build-fokker-lst
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download fokker.dks artifact
        uses: actions/download-artifact@v4
        with:
          name: fokker.dks
          path: fokker.dks
      - name: Build Triplane Turmoil
        run: |
          ./switch/ci-docker-run.sh ./switch/ci-build.sh
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: switch-build
          path: switch/triplane-turmoil-switch.zip
  # build-windows-x86_64:
  #   name: Windows x86_64
  #   runs-on: windows-latest
  #   steps:
  #     - uses: msys2/setup-msys2@v2
  #     - run: git config --global core.autocrlf false
  #     - uses: actions/checkout@v4
  #     - name: Download fokker.lst artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: fokker.lst
  #         path: data/fokker.lst
  #     - name: Prepare build environment
  #       run: |
  #         msys2 -c './windows/ci-prepare.sh x86_64'
  #     - name: Build Triplane Turmoil
  #       run: |
  #         cd windows
  #         msys2 -c './ci-build.sh x86_64'
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows-x86_64-build
  #         path: windows/triplane-turmoil-windows-x86_64.zip
  create-release:
    name: Create release
    needs:
      [
        build-switch,
        # build-windows-x86_64,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Checking out...
        uses: actions/checkout@v4
      - name: Download Nintendo Switch Build Asset
        uses: actions/download-artifact@v4
        with:
          name: switch-build
      # - name: Download Windows x86_64 Build Asset
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: windows-x86_64-build
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ inputs.version }}
          release_name: Triplane Turmoil ${{ inputs.version }}
          body: ${{ inputs.release_notes || steps.read_release_notes.outputs.release_notes }}
          draft: true
          prerelease: ${{ inputs.prerelease }}
      - name: Upload Nintendo Switch Build Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: switch-build/triplane-turmoil-switch.zip
          asset_name: triplane-turmoil-switch-${{ inputs.version }}.zip
          asset_content_type: application/zip
      # - name: Upload Windows x86_64 Build Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: windows-x86_64-build/triplane-turmoil-windows-x86_64.zip
      #     asset_name: triplane-turmoil-windows-x86_64-${{ inputs.version }}.zip
      #     asset_content_type: application/zip
